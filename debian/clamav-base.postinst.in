#!/bin/sh
# postinst script for #PACKAGE#
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

case "$1" in
  configure)
  
  DATABASEDIR=/var/lib/clamav
  LOGDIR=/var/log/clamav
  user=clamav

  # Set up the clamav user on new install
  if [ -z "$2" ]; then
    if ! id clamav; then
        adduser --system --no-create-home --quiet \
            --disabled-password --disabled-login \
	    --shell /bin/false --group --home /var/lib/clamav clamav
    fi
    if [ -f /etc/aliases ] || [ -L /etc/aliases ]; then
      if ! grep -qi "^clamav" /etc/aliases; then
        echo "clamav: root" >> /etc/aliases
        newal=`which newaliases || true`
        if [ -n "$newal" ] && [ -x "$newal" ]; then
          $newal || true
        fi
      fi
    fi
  fi
  chown $user:$user $DATABASEDIR
  chown $user:$user $LOGDIR
  ;;
  abort-upgrade|abort-remove|abort-deconfigure)
  ;;
  *)
  echo "postinst called with unknown argument \`$1'" >&2
  exit 1
  ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
