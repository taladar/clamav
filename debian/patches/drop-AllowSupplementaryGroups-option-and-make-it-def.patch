From 2489109e048f803a6019c00671cff2b43f139555 Mon Sep 17 00:00:00 2001
From: Sebastian Andrzej Siewior <sebastian@breakpoint.cc>
Date: Mon, 2 May 2016 22:01:26 +0200
Subject: drop AllowSupplementaryGroups option and make it default

AllowSupplementaryGroups set enables the use of additional groups which
are part of the user configured. I don't see a reason why this should be
optional. If this is not wanted there is no reason to add the additional
groups in the first place.
This option enabled is the default behaviour of `start-stop-deamon' and
systemd's "User=" directive. Therefore make it default if available and
give the user one option less that can be set wrong.

BTS: https://bugs.debian.org/822444
clamav: https://bugzilla.clamav.net/show_bug.cgi?id=11557

Patch-Name: drop-AllowSupplementaryGroups-option-and-make-it-def.patch
Signed-off-by: Sebastian Andrzej Siewior <sebastian@breakpoint.cc>
---
 clamav-milter/clamav-milter.c    | 27 ++++++++-------------------
 clamd/clamd.c                    | 28 +++++++++-------------------
 docs/man/clamav-milter.conf.5.in |  5 -----
 docs/man/clamd.conf.5.in         |  5 -----
 docs/man/freshclam.conf.5.in     |  5 -----
 etc/clamav-milter.conf.sample    |  5 -----
 etc/clamd.conf.sample            |  4 ----
 etc/freshclam.conf.sample        |  4 ----
 freshclam/freshclam.c            | 29 +++++++++--------------------
 shared/optparser.c               |  2 --
 10 files changed, 26 insertions(+), 88 deletions(-)

diff --git a/clamav-milter/clamav-milter.c b/clamav-milter/clamav-milter.c
index 48a9044..8c7bf6d 100644
--- a/clamav-milter/clamav-milter.c
+++ b/clamav-milter/clamav-milter.c
@@ -298,28 +298,17 @@ int main(int argc, char **argv) {
 	    return 1;
 	}
 
-	if(optget(opts, "AllowSupplementaryGroups")->enabled) {
 #ifdef HAVE_INITGROUPS
-	    if(initgroups(opt->strarg, user->pw_gid)) {
-		fprintf(stderr, "ERROR: initgroups() failed.\n");
-		optfree(opts);
-		return 1;
-	    }
-#else
-	    mprintf("!AllowSupplementaryGroups: initgroups() is not available, please disable AllowSupplementaryGroups\n");
-	    optfree(opts);
+	if(initgroups(user->pw_name, user->pw_gid)) {
+	    fprintf(stderr, "ERROR: initgroups() failed.\n");
 	    return 1;
-#endif
-	} else {
-#ifdef HAVE_SETGROUPS
-	    if(setgroups(1, &user->pw_gid)) {
-		fprintf(stderr, "ERROR: setgroups() failed.\n");
-		optfree(opts);
-		return 1;
-	    }
-#endif
 	}
-
+#elif HAVE_SETGROUPS
+	if(setgroups(1, &user->pw_gid)) {
+	    fprintf(stderr, "ERROR: setgroups() failed.\n");
+	    return 1;
+	}
+#endif
 	if(setgid(user->pw_gid)) {
 	    fprintf(stderr, "ERROR: setgid(%d) failed.\n", (int) user->pw_gid);
 	    optfree(opts);
diff --git a/clamd/clamd.c b/clamd/clamd.c
index 5793bec..191d68c 100644
--- a/clamd/clamd.c
+++ b/clamd/clamd.c
@@ -216,27 +216,17 @@ int main(int argc, char **argv)
             return 1;
         }
 
-        if(optget(opts, "AllowSupplementaryGroups")->enabled) {
 #ifdef HAVE_INITGROUPS
-            if(initgroups(opt->strarg, user->pw_gid)) {
-                fprintf(stderr, "ERROR: initgroups() failed.\n");
-                optfree(opts);
-                return 1;
-            }
-#else
-            mprintf("!AllowSupplementaryGroups: initgroups() is not available, please disable AllowSupplementaryGroups in %s\n", cfgfile);
-            optfree(opts);
-            return 1;
+	if(initgroups(user->pw_name, user->pw_gid)) {
+		fprintf(stderr, "ERROR: initgroups() failed.\n");
+		return 1;
+	}
+#elif HAVE_SETGROUPS
+	if(setgroups(1, &user->pw_gid)) {
+		fprintf(stderr, "ERROR: setgroups() failed.\n");
+		return 1;
+	}
 #endif
-        } else {
-#ifdef HAVE_SETGROUPS
-            if(setgroups(1, &user->pw_gid)) {
-                fprintf(stderr, "ERROR: setgroups() failed.\n");
-                optfree(opts);
-                return 1;
-            }
-#endif
-        }
 
         if(setgid(user->pw_gid)) {
             fprintf(stderr, "ERROR: setgid(%d) failed.\n", (int) user->pw_gid);
diff --git a/docs/man/clamav-milter.conf.5.in b/docs/man/clamav-milter.conf.5.in
index ae9d92f..c3d9e29 100644
--- a/docs/man/clamav-milter.conf.5.in
+++ b/docs/man/clamav-milter.conf.5.in
@@ -57,11 +57,6 @@ Run as another user (clamav-milter must be started by root for this option to wo
 .br
 Default: unset (don\'t drop privileges)
 .TP 
-\fBAllowSupplementaryGroups BOOL\fR
-Initialize supplementary group access (clamav-milter must be started by root).
-.br 
-Default: no
-.TP 
 \fBReadTimeout NUMBER\fR
 Waiting for data from clamd will timeout after this time (seconds).
 .br 
diff --git a/docs/man/clamd.conf.5.in b/docs/man/clamd.conf.5.in
index 8908e45..cd96854 100644
--- a/docs/man/clamd.conf.5.in
+++ b/docs/man/clamd.conf.5.in
@@ -270,11 +270,6 @@ Run the daemon as a specified user (the process must be started by root).
 .br
 Default: disabled
 .TP
-\fBAllowSupplementaryGroups BOOL\fR
-Initialize a supplementary group access (the process must be started by root).
-.br
-Default: no
-.TP
 \fBBytecode BOOL\fR
 With this option enabled ClamAV will load bytecode from the database. It is highly recommended you keep this option turned on, otherwise you may miss detections for many new viruses.
 .br
diff --git a/docs/man/freshclam.conf.5.in b/docs/man/freshclam.conf.5.in
index 9960ec2..a2e21b0 100644
--- a/docs/man/freshclam.conf.5.in
+++ b/docs/man/freshclam.conf.5.in
@@ -76,11 +76,6 @@ Enable debug messages in libclamav.
 .br
 Default: no
 .TP 
-\fBAllowSupplementaryGroups BOOL\fR
-Initialize supplementary group access (freshclam must be started by root).
-.br 
-Default: disabled
-.TP 
 \fBUpdateLogFile STRING\fR
 Enable logging to a specified file. Highly recommended.
 .br 
diff --git a/etc/clamav-milter.conf.sample b/etc/clamav-milter.conf.sample
index ed0d519..d24a8d3 100644
--- a/etc/clamav-milter.conf.sample
+++ b/etc/clamav-milter.conf.sample
@@ -38,11 +38,6 @@ Example
 # Default: unset (don't drop privileges)
 #User clamav
 
-# Initialize supplementary group access (clamav-milter must be started by root).
-#
-# Default: no
-#AllowSupplementaryGroups no
-
 # Waiting for data from clamd will timeout after this time (seconds).
 # Value of 0 disables the timeout.
 #
diff --git a/etc/clamd.conf.sample b/etc/clamd.conf.sample
index 6a3ec45..8d2af63 100644
--- a/etc/clamd.conf.sample
+++ b/etc/clamd.conf.sample
@@ -194,10 +194,6 @@ Example
 # Default: don't drop privileges
 #User clamav
 
-# Initialize supplementary group access (clamd must be started by root).
-# Default: no
-#AllowSupplementaryGroups no
-
 # Stop daemon when libclamav reports out of memory condition.
 #ExitOnOOM yes
 
diff --git a/etc/freshclam.conf.sample b/etc/freshclam.conf.sample
index 1cc4a81..1839116 100644
--- a/etc/freshclam.conf.sample
+++ b/etc/freshclam.conf.sample
@@ -55,10 +55,6 @@ Example
 # Default: clamav (may depend on installation options)
 #DatabaseOwner clamav
 
-# Initialize supplementary group access (freshclam must be started by root).
-# Default: no
-#AllowSupplementaryGroups yes
-
 # Use DNS to verify virus database version. Freshclam uses DNS TXT records
 # to verify database and software versions. With this directive you can change
 # the database verification domain.
diff --git a/freshclam/freshclam.c b/freshclam/freshclam.c
index 08f1250..8bc90ef 100644
--- a/freshclam/freshclam.c
+++ b/freshclam/freshclam.c
@@ -419,28 +419,17 @@ main (int argc, char **argv)
             return FCE_USERINFO;
         }
 
-        if (optget (opts, "AllowSupplementaryGroups")->enabled)
-        {
 #ifdef HAVE_INITGROUPS
-            if (initgroups (dbowner, user->pw_gid))
-            {
-                logg ("^initgroups() failed.\n");
-                optfree (opts);
-                return FCE_USERORGROUP;
-            }
+	if (initgroups(dbowner, user->pw_gid)) {
+		logg ("^initgroups() failed.\n");
+		return FCE_USERORGROUP;
+	}
+#elif HAVE_SETGROUPS
+	if (setgroups(1, &user->pw_gid)) {
+		logg ("^setgroups() failed.\n");
+		return FCE_USERORGROUP;
+	}
 #endif
-        }
-        else
-        {
-#ifdef HAVE_SETGROUPS
-            if (setgroups (1, &user->pw_gid))
-            {
-                logg ("^setgroups() failed.\n");
-                optfree (opts);
-                return FCE_USERORGROUP;
-            }
-#endif
-        }
 
         if (setgid (user->pw_gid))
         {
diff --git a/shared/optparser.c b/shared/optparser.c
index f8911ea..e2b28cc 100644
--- a/shared/optparser.c
+++ b/shared/optparser.c
@@ -285,8 +285,6 @@ const struct clam_option __clam_options[] = {
 
     { "User", NULL, 0, CLOPT_TYPE_STRING, NULL, -1, NULL, 0, OPT_CLAMD | OPT_MILTER, "Run the daemon as a specified user (the process must be started by root).", "clamav" },
 
-    { "AllowSupplementaryGroups", NULL, 0, CLOPT_TYPE_BOOL, MATCH_BOOL, 0, NULL, 0, OPT_CLAMD | OPT_FRESHCLAM | OPT_MILTER, "Initialize a supplementary group access (the process must be started by root).", "no" },
-
     /* Scan options */
     { "Bytecode", "bytecode", 0, CLOPT_TYPE_BOOL, MATCH_BOOL, 1, NULL, 0, OPT_CLAMD | OPT_CLAMSCAN, "With this option enabled ClamAV will load bytecode from the database. It is highly recommended you keep this option on, otherwise you'll miss detections for many new viruses.", "yes" },
 
